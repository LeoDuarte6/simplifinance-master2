rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Library content can only be accessed by authenticated users with active subscriptions
    match /library/{filename} {
      allow read: if request.auth != null &&
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.subscriptionStatus == 'active';
    }

    // Admin content uploads and management
    match /library/{filename} {
      allow write: if request.auth != null &&
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Public assets (if any) - uncomment if needed
    // match /public/{filename} {
    //   allow read: if true;
    // }

    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}